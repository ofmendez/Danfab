//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.7
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from /media/windows/Users/OFMendez/Mis documentos/Work/Ubuntu/LENGUAJES/Danfab/projectUnity/Danfab/Assets/Antlr4/Grammar.g4 by ANTLR 4.7

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using Antlr4.Runtime.Misc;
using Antlr4.Runtime.Tree;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete generic visitor for a parse tree produced
/// by <see cref="GrammarParser"/>.
/// </summary>
/// <typeparam name="Result">The return type of the visit operation.</typeparam>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.7")]
[System.CLSCompliant(false)]
public interface IGrammarVisitor<Result> : IParseTreeVisitor<Result> {
	/// <summary>
	/// Visit a parse tree produced by <see cref="GrammarParser.principal"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPrincipal([NotNull] GrammarParser.PrincipalContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="GrammarParser.block"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBlock([NotNull] GrammarParser.BlockContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="GrammarParser.function_call"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFunction_call([NotNull] GrammarParser.Function_callContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="GrammarParser.arrayPosition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitArrayPosition([NotNull] GrammarParser.ArrayPositionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="GrammarParser.print"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPrint([NotNull] GrammarParser.PrintContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="GrammarParser.arraysize"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitArraysize([NotNull] GrammarParser.ArraysizeContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="GrammarParser.if_regular"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIf_regular([NotNull] GrammarParser.If_regularContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="GrammarParser.if_return"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIf_return([NotNull] GrammarParser.If_returnContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="GrammarParser.if_break_continue"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIf_break_continue([NotNull] GrammarParser.If_break_continueContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="GrammarParser.if_return_break_continue"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIf_return_break_continue([NotNull] GrammarParser.If_return_break_continueContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="GrammarParser.switch_regular"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSwitch_regular([NotNull] GrammarParser.Switch_regularContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="GrammarParser.switch_return"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSwitch_return([NotNull] GrammarParser.Switch_returnContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="GrammarParser.switch_break_continue"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSwitch_break_continue([NotNull] GrammarParser.Switch_break_continueContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="GrammarParser.switch_return_break_continue"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSwitch_return_break_continue([NotNull] GrammarParser.Switch_return_break_continueContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="GrammarParser.while_regular"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitWhile_regular([NotNull] GrammarParser.While_regularContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="GrammarParser.while_return"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitWhile_return([NotNull] GrammarParser.While_returnContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="GrammarParser.function"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFunction([NotNull] GrammarParser.FunctionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="GrammarParser.body"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBody([NotNull] GrammarParser.BodyContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>body_regularBody</c>
	/// labeled alternative in <see cref="GrammarParser.body_regular"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBody_regularBody([NotNull] GrammarParser.Body_regularBodyContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>body_regularIfRegular</c>
	/// labeled alternative in <see cref="GrammarParser.body_regular"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBody_regularIfRegular([NotNull] GrammarParser.Body_regularIfRegularContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>body_regularSwRegular</c>
	/// labeled alternative in <see cref="GrammarParser.body_regular"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBody_regularSwRegular([NotNull] GrammarParser.Body_regularSwRegularContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>body_regularWhileRegular</c>
	/// labeled alternative in <see cref="GrammarParser.body_regular"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBody_regularWhileRegular([NotNull] GrammarParser.Body_regularWhileRegularContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>body_regularEpsilon</c>
	/// labeled alternative in <see cref="GrammarParser.body_regular"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBody_regularEpsilon([NotNull] GrammarParser.Body_regularEpsilonContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>body_returnBody</c>
	/// labeled alternative in <see cref="GrammarParser.body_return"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBody_returnBody([NotNull] GrammarParser.Body_returnBodyContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>body_returnIfReturn</c>
	/// labeled alternative in <see cref="GrammarParser.body_return"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBody_returnIfReturn([NotNull] GrammarParser.Body_returnIfReturnContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>body_returnSwitchReturn</c>
	/// labeled alternative in <see cref="GrammarParser.body_return"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBody_returnSwitchReturn([NotNull] GrammarParser.Body_returnSwitchReturnContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>body_returWhileReturn</c>
	/// labeled alternative in <see cref="GrammarParser.body_return"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBody_returWhileReturn([NotNull] GrammarParser.Body_returWhileReturnContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>body_returnReturnregular</c>
	/// labeled alternative in <see cref="GrammarParser.body_return"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBody_returnReturnregular([NotNull] GrammarParser.Body_returnReturnregularContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>body_returnEpsilon</c>
	/// labeled alternative in <see cref="GrammarParser.body_return"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBody_returnEpsilon([NotNull] GrammarParser.Body_returnEpsilonContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="GrammarParser.return_regular"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitReturn_regular([NotNull] GrammarParser.Return_regularContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>body_BC_Body</c>
	/// labeled alternative in <see cref="GrammarParser.body_break_continue"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBody_BC_Body([NotNull] GrammarParser.Body_BC_BodyContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>body_BC_IfBC</c>
	/// labeled alternative in <see cref="GrammarParser.body_break_continue"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBody_BC_IfBC([NotNull] GrammarParser.Body_BC_IfBCContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>body_BC_SwitchBC</c>
	/// labeled alternative in <see cref="GrammarParser.body_break_continue"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBody_BC_SwitchBC([NotNull] GrammarParser.Body_BC_SwitchBCContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>body_BC_WhileRegular</c>
	/// labeled alternative in <see cref="GrammarParser.body_break_continue"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBody_BC_WhileRegular([NotNull] GrammarParser.Body_BC_WhileRegularContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>body_BC_BC</c>
	/// labeled alternative in <see cref="GrammarParser.body_break_continue"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBody_BC_BC([NotNull] GrammarParser.Body_BC_BCContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>body_BC_Epsilon</c>
	/// labeled alternative in <see cref="GrammarParser.body_break_continue"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBody_BC_Epsilon([NotNull] GrammarParser.Body_BC_EpsilonContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>body_RBC_Body</c>
	/// labeled alternative in <see cref="GrammarParser.body_return_break_continue"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBody_RBC_Body([NotNull] GrammarParser.Body_RBC_BodyContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>body_RBC_IfRBC</c>
	/// labeled alternative in <see cref="GrammarParser.body_return_break_continue"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBody_RBC_IfRBC([NotNull] GrammarParser.Body_RBC_IfRBCContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>body_RBC_SwitchRBC</c>
	/// labeled alternative in <see cref="GrammarParser.body_return_break_continue"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBody_RBC_SwitchRBC([NotNull] GrammarParser.Body_RBC_SwitchRBCContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>body_RBC_WhileReturn</c>
	/// labeled alternative in <see cref="GrammarParser.body_return_break_continue"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBody_RBC_WhileReturn([NotNull] GrammarParser.Body_RBC_WhileReturnContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>body_RBC_BC</c>
	/// labeled alternative in <see cref="GrammarParser.body_return_break_continue"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBody_RBC_BC([NotNull] GrammarParser.Body_RBC_BCContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>body_RBC_Return</c>
	/// labeled alternative in <see cref="GrammarParser.body_return_break_continue"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBody_RBC_Return([NotNull] GrammarParser.Body_RBC_ReturnContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>body_RBC_Epsilon</c>
	/// labeled alternative in <see cref="GrammarParser.body_return_break_continue"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBody_RBC_Epsilon([NotNull] GrammarParser.Body_RBC_EpsilonContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="GrammarParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExpression([NotNull] GrammarParser.ExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>expressionContentFunctionCall</c>
	/// labeled alternative in <see cref="GrammarParser.expressionContent"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExpressionContentFunctionCall([NotNull] GrammarParser.ExpressionContentFunctionCallContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>expressionContentSumOrNeg</c>
	/// labeled alternative in <see cref="GrammarParser.expressionContent"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExpressionContentSumOrNeg([NotNull] GrammarParser.ExpressionContentSumOrNegContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>expressionContentRelational</c>
	/// labeled alternative in <see cref="GrammarParser.expressionContent"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExpressionContentRelational([NotNull] GrammarParser.ExpressionContentRelationalContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>expressionContentequality</c>
	/// labeled alternative in <see cref="GrammarParser.expressionContent"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExpressionContentequality([NotNull] GrammarParser.ExpressionContentequalityContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>expressionContentContentOr</c>
	/// labeled alternative in <see cref="GrammarParser.expressionContent"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExpressionContentContentOr([NotNull] GrammarParser.ExpressionContentContentOrContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>expressionContentInput</c>
	/// labeled alternative in <see cref="GrammarParser.expressionContent"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExpressionContentInput([NotNull] GrammarParser.ExpressionContentInputContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>expressionContentID</c>
	/// labeled alternative in <see cref="GrammarParser.expressionContent"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExpressionContentID([NotNull] GrammarParser.ExpressionContentIDContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>expressionContentMul</c>
	/// labeled alternative in <see cref="GrammarParser.expressionContent"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExpressionContentMul([NotNull] GrammarParser.ExpressionContentMulContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>expressionContentNegative</c>
	/// labeled alternative in <see cref="GrammarParser.expressionContent"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExpressionContentNegative([NotNull] GrammarParser.ExpressionContentNegativeContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>expressionContentParenthesis</c>
	/// labeled alternative in <see cref="GrammarParser.expressionContent"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExpressionContentParenthesis([NotNull] GrammarParser.ExpressionContentParenthesisContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>expressionContentArrayPosition</c>
	/// labeled alternative in <see cref="GrammarParser.expressionContent"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExpressionContentArrayPosition([NotNull] GrammarParser.ExpressionContentArrayPositionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>expressionContentAnd</c>
	/// labeled alternative in <see cref="GrammarParser.expressionContent"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExpressionContentAnd([NotNull] GrammarParser.ExpressionContentAndContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>expressionContentdataType</c>
	/// labeled alternative in <see cref="GrammarParser.expressionContent"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExpressionContentdataType([NotNull] GrammarParser.ExpressionContentdataTypeContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>expressionContentNot</c>
	/// labeled alternative in <see cref="GrammarParser.expressionContent"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExpressionContentNot([NotNull] GrammarParser.ExpressionContentNotContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="GrammarParser.dataType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDataType([NotNull] GrammarParser.DataTypeContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="GrammarParser.input"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitInput([NotNull] GrammarParser.InputContext context);
}
